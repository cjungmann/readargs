@node Basic Example
@section Basic Example

The following basic @emph{readargs} implementation explains how
to use this library.

@example
#include <stdio.h>
#include <readargs.h>

// Prepare action targets and the actions array
// @xref{raAction}
const char *name = NULL;
int        value = 0;

raAction actions[] = @{
  @{'h', "help",  "This help output", &ra_show_help_agent,    NULL,   NULL    @},
  @{'s', "show",  "Show settings",    &ra_show_values_agent,  NULL,   NULL    @},
  @{'n', "name",  "Set name value",   &ra_string_agent,       &name,  "STRING"@},
  @{'v', "value", "Set number value", &ra_int_agent,          &value, "NUMBER"@}
@};

int main(int argc, const char **argv)
@{
   if (argc < 2)
   @{
      // If some arguments are necessary, a usage message may be helpful.
      // Create your own message, or use the builtin message display.
      // @xref{ra_show_no_args_message}
      ra_show_no_args_message();
      return 1;
   @}
   else
   @{
@anchor{exec basic}
      // Register the arguments and option instructions to
      // the global raScene variable.
      // @xref{ra_set_scene}
      // @xref{raScene}
      // @xref{ACTS_COUNT}
      ra_set_scene(argv, argc, actions, ACTS_COUNT(actions));

      // Call the function that starts everything
      // @xref{ra_process_arguments}
      if (ra_process_arguments())
      @{
         // Begin program.  Here we just show the target values
         printf("name is \"%s\"\n"
                "value is %d\n",
                name, value);
      @}
   @}

   return 0;
@}

@end example
