@node Expanded Action Map
@section Expanded Action Map

This code listing includes examples of all the builtin agent
types and several variations on how the actions can be
matched.

This code listing includes an action map that features
each builtin @code{raAgent} type:

@xref{ra_int_agent} @*@
@xref{ra_flag_agent} @*@
@xref{ra_string_agent} @*@
@xref{ra_show_help_agent} @*@
@xref{ra_show_values_agent} @*@

Note that, except for the positional first @code{raAction}, 
each @code{raAction} instance in the map is invoked with a
command line option or long-option argument.

@example
// Build with "gcc -o mapdemo mapdemo.c -lreadargs
#include <stdio.h>
#include <readargs.h>

// State Variables definitions
int        age = 0;
int        color = 0;
const char *greeting = "Hello";
const char *name = NULL;

// Action Map definition
raAction actions[] = @{
   @{ -1,  "*name", "Set name",     &ra_string_agent, &name,     "STRING" @},
   @{ 'a', "age",   "Set age",      &ra_int_agent,    &age,      "NUMBER" @},
   @{ 0,   "color", "Colorize text",&ra_flag_agent,   &color,    "TRUE"   @},
   @{ 'g', NULL,    "Set greeting", &ra_string_agent, &greeting, "STRING" @},
   @{ 'h', "help",  "This display", &ra_show_help_agent   @},
   @{ 's', "show",  "Show state",   &ra_show_values_agent @}
@};

int main(int argc, const char **argv)
@{
   const char *coloron = "";
   const char *coloroff = "\e[m";

   ra_set_scene(argv, argc, actions, ACTS_COUNT(actions));

   if (ra_process_arguments())
   @{
      if (color)
         coloron = "\e[32;1m";

      printf("%s%s%s, %d-year-old %s%s%s.\n",
             coloron, greeting, coloroff,
             age,
             coloron, name, coloroff);
   @}
   return 0;
@}
@end example

