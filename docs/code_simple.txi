@node Simple and Complete
@section Simple and Complete

This code sample presents a minimal implementation to
illustrate the fundamentals of a @code{readargs}
enabled application.

Follow links in the code comments to learn about each
section.

@example
#include <stdio.h>
#include <readargs.h>

// @dfn{State Variables} in which arguments are saved
int        nval = 0;
const char *sval = NULL;

// The @dfn{Action Map} links state variables with option handling
raAction actions[] = @{
   @{ 'h', "help",   "This help display", &ra_show_help_agent, NULL,  NULL @},
   @{ 'n', "number", "Set nval",          &ra_int_agent,       &nval, "NUMBER" @},
   @{ 's', "string", "Set sval",          &ra_string_agent,    &sval, "STRING" @}
@};
// @xref{Defining an Action Map}
// @xref{raAction}

int main(int argc, const char *argv)
@{
   // Register options map and arguments
   ra_set_scene(argv, argc, actions, ACTS_COUNT(actions));
   // @xref{ra_set_scene}

   // Process arguments, with library handling all errors
   if (ra_process_arguments())
   // @xref{Argument Processing}
   // @xref{ra_process_arguments}
   @{
      // begin the program here
   @}
   return 0;
@}
@end example

The next section will show how to make an action map (@pxref{An Array of Actions}).
