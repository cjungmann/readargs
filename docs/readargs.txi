\input texinfo
@setfilename readargs.info
@settitle readargs library

@c @dircategory and @direntry signal how to incorporate
@c this content into the larger info environment.
@c Consult the root `info` for direction, but in general
@c try to add to an existing category and make the entry
@c conform to existing entries.
@dircategory Libraries
@direntry
* readargs: (readargs).       Documentation for readargs command line processing library
@end direntry

@c copyright notice.  to be included in @titlepage with @insertcopying
@copying
Offline Manual for readargs

Copyright @copyright{} 2020 Charles P Jungmann
@end copying

@titlepage
@title Using readargs
@author Charles P. Jungmann
@page
@insertcopying
@end titlepage

@paragraphindent none

@ifnottex
@node Top
@top Using readargs

This manual is a reference for using the @emph{readargs} library.

@emph{readargs} interprets command line arguments, identifying
options and values according to the GNU/Posix standard.
@end ifnottex

@contents
@menu
* Introduction::
* Demo Code::               Code for teaching and reference
* Quick Start::             Enough to get you started
* Data Types::              Data types that support argument processing
* Library Functions::       
* Preparing Actions::
* Builtin Action Agents::   
* Custom Action Agents::    Extend the library with 
* Actions Interpretation::  Explains how the library reads arguments
* Index::
@end menu

@node Introduction
@chapter Introduction

This C library simplifies the essential task of collecting
command line arguments.  It distinguishes itself from other
command line libraries by offering the following benefits:

@table @emph

@item Follows Parsing Standards

Command line arguments are parsed according to widely-recognized
GNU long option extension to the POSIX standards for handling
command line arguments.

@url{http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html#Argument-Syntax}

@item Compact Code

The basic code requirements are minimal, consisting of an @dfn{action map}
array of action definitions, followed by a simple library initialization
and call to @code{ra_process_arguments} to process the arguments.

@xref{Simple and Complete}

@item Generates Help and Example displays

Using the @dfn{action map}, the library can construct both
a template for calling the program as well as a help display
listing all the available options.

@item Extensible

The library provides tools for processing integer and string
arguments, which will cover most program needs.  However, it
is also reasonably easy to create custom argument handling for
other data types.

@end table


@include code.txi
@include quickstart.txi
@include types.txi
@include functions.txi
@include actions.txi
@include builtin_agents.txi
@include custom_agents.txi
@include interpretation.txi

@node Index
@chapter Index

@printindex fn

@bye
